/*
 ============================================================================
 Name        : TP_[1].c
 Author      : Acosta Matias Jordan 1A
 Version     :
 Copyright   : Your copyright notice
 Description : Hello World in C, Ansi-style
 ============================================================================
 */
#include <stdio.h>
#include <stdlib.h>
#include "menuYMensajes.h"
#include "calculos.h"
#define BITCOIN 4606954.55
#define DESCUENTO 10
#define INTERES 25



int solicitarKm ();
int solicitarPrecios();
int validarIngesoPositivo (int ingreso);


int cargaForzada (int* kmIngresados, int* precioAero, int* precioLat);


int main(void) {
		setbuf(stdout,NULL);
		int seguir = 1;
	    int kmIngresados = 0;
	    int precAero = 0;
	    int precLat = 0;

	    float precAeroDebito;
	    float precAeroCredito;
	    double precAeroBitcoin;
	    float precAeroPorKm;


	    float precLatDebito;
	    float precLatCredito;
	    double precLatBitcoin;
	    float precLatPorKm;
	    int diferenciaPrecio;



	    int flagKm = 0;
	    int flagPrecios = 0;
	    int flagCalculos = 0;



	    do
	    {

	        switch(menu(kmIngresados,precAero,precLat))
	        {
	        case 1:
	            kmIngresados = solicitarKm();
	            flagKm=1;
	            break;
	        case 2:
	            printf("Aerolineas ");
	            precAero = solicitarPrecios();

	            printf("Latam ");
	            precLat = solicitarPrecios();
	            flagPrecios=1;
	            break;
	        case 3:
	            if (flagKm && flagPrecios)
	            {
	                realizarCalculos (precAero,kmIngresados,DESCUENTO,INTERES,BITCOIN,&precAeroDebito,&precAeroCredito,&precAeroBitcoin,&precAeroPorKm);
	                realizarCalculos (precLat,kmIngresados,DESCUENTO,INTERES,BITCOIN,&precLatDebito,&precLatCredito,&precLatBitcoin,&precLatPorKm);
	                diferenciaPrecio = calcularDifPrecio (precAero,precLat);
	                mensajeCalculos();
	                flagCalculos = 1;
	            }
	            else
	            {
	                printf("Para realizar los calculos se debe ingresar los kilometros y precios.\n\n");

	            }
	            break;
	        case 4:
	            if (flagCalculos)
	            {
	                printf("KMs Ingresados: %d\n\n", kmIngresados);
	                printf("Precio Aerolineas: $ %d\n",precAero);
	                mostrarResultados(precAeroDebito,precAeroCredito,precAeroBitcoin,precAeroPorKm);
	                printf("\n Precio Latam: $ %d\n",precLat);
	                mostrarResultados(precLatDebito,precLatCredito,precLatBitcoin,precLatPorKm);
	                printf("\nLa diferencia de precio es: $ %d",diferenciaPrecio);
	                printf("\n\n***SE REESTABLECIO KM Y PRECIOS A CERO\n.");
	                flagPrecios = 0;
	                flagKm = 0;
	                flagCalculos = 0;
	                kmIngresados = 0;
	                precAero = 0;
	                precLat = 0;
	            }
	            else
	            {
	                printf("Para mostrar los resultados primero se deben hacer los calculos.\n\n");
	            }

	            break;
	        case 5:
	            cargaForzada (&kmIngresados,&precAero,&precLat);
	            realizarCalculos (precAero,kmIngresados,DESCUENTO,INTERES,BITCOIN,&precAeroDebito,&precAeroCredito,&precAeroBitcoin,&precAeroPorKm);
	            realizarCalculos (precLat,kmIngresados,DESCUENTO,INTERES,BITCOIN,&precLatDebito,&precLatCredito,&precLatBitcoin,&precLatPorKm);
	            diferenciaPrecio = calcularDifPrecio (precAero,precLat);
	            printf("KMs Ingresados: %d\n\n", kmIngresados);
	            printf("Precio Aerolineas: $ %d\n",precAero);
	            mostrarResultados(precAeroDebito,precAeroCredito,precAeroBitcoin,precAeroPorKm);
	            printf("\n Precio Latam: $ %d\n",precLat);
	            mostrarResultados(precLatDebito,precLatCredito,precLatBitcoin,precLatPorKm);
	            printf("\nLa diferencia de precio es: $ %d",diferenciaPrecio);
	            printf("\n\n* * *   SE REESTABLECIO KM Y PRECIOS A CERO   * * *\n.");
	            flagPrecios = 0;
	            flagKm = 0;
	            flagCalculos = 0;
	            kmIngresados = 0;
	            precAero = 0;
	            precLat = 0;
	            break;
	        case 6:
	            seguir = 0;
	            break;
	        default:
	            printf("Opcion ingresada incorrecta.");
	            break;
	        }
	        system("pause");

	    }
	    while (seguir == 1);
	return EXIT_SUCCESS;
}


int solicitarKm ()
{
    int km;
    printf("Ingrese los Kilometros: ");
    scanf("%d",&km);
    km = validarIngesoPositivo(km);

    return km;
}
int validarIngesoPositivo (int ingreso)
{
    while (ingreso < 1)
    {
        printf("ERROR: Ingrese un valor positivo mayor a cero: ");
        fflush(stdin);
        scanf("%d",&ingreso);
    }
    return ingreso;
}
int solicitarPrecios()
{
    int precio;
    printf("ingrese precio: ");
    scanf("%d",&precio);
    precio = validarIngesoPositivo(precio);
    return precio;
}

int cargaForzada (int* kmIngresados, int* precioAero, int* precioLat)
{
    int todoOk=0;
    if (kmIngresados != NULL && precioAero != NULL && precioLat != NULL)
    {
        *kmIngresados = 7090;
        *precioAero =  162965;
        *precioLat = 159339;
        todoOk = 1;
    }
    return todoOk;
}

